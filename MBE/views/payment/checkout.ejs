<div class="checkout-page">
    <div class="container">
        <div class="checkout-grid">
            <div class="checkout-form">
                <h2>Complete Your Order</h2>
                
                <form id="payment-form">
                    <div class="form-group">
                        <label class="form-label">Card Information</label>
                        <div id="card-element" class="stripe-element"></div>
                        <div id="card-errors" class="error-message"></div>
                    </div>
                    
                    <button id="submit-button" class="btn btn-primary btn-block btn-lg">
                        <span id="button-text">Pay $<%= parseFloat(order.price).toFixed(2) %></span>
                        <div id="spinner" class="spinner hidden"></div>
                    </button>
                </form>
                
                <div class="payment-security">
                    <i class="fas fa-lock"></i>
                    <span>Secured by Stripe - Your payment information is encrypted</span>
                </div>
            </div>
            
            <div class="order-summary-box">
                <h3>Order Summary</h3>
                
                <div class="summary-section">
                    <h4>Plan Details</h4>
                    <p><%= order.plan_name || 'Custom Plan' %></p>
                </div>
                
                <div class="summary-section">
                    <h4>Resources</h4>
                    <div class="resource-list">
                        <div class="resource-item">
                            <i class="fas fa-microchip"></i>
                            <span><%= order.cpu %> CPU Core<%= order.cpu > 1 ? 's' : '' %></span>
                        </div>
                        <div class="resource-item">
                            <i class="fas fa-memory"></i>
                            <span><%= (order.ram/1024).toFixed(0) %> GB RAM</span>
                        </div>
                        <div class="resource-item">
                            <i class="fas fa-hdd"></i>
                            <span><%= order.disk %> GB SSD</span>
                        </div>
                        <div class="resource-item">
                            <i class="fas fa-database"></i>
                            <span><%= order.databases %> Database<%= order.databases > 1 ? 's' : '' %></span>
                        </div>
                        <div class="resource-item">
                            <i class="fas fa-cloud-upload-alt"></i>
                            <span><%= order.backups %> Backup<%= order.backups > 1 ? 's' : '' %></span>
                        </div>
                    </div>
                </div>
                
                <div class="summary-section">
                    <h4>Location</h4>
                    <p><i class="fas fa-map-marker-alt"></i> <%= order.node_location %></p>
                </div>
                
                <div class="summary-total">
                    <span>Total (Monthly)</span>
                    <span class="total-amount">$<%= parseFloat(order.price).toFixed(2) %></span>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.checkout-page {
    min-height: 100vh;
    background: #f8f9fa;
    padding: 3rem 0;
}

.checkout-grid {
    display: grid;
    grid-template-columns: 1.5fr 1fr;
    gap: 3rem;
}

.checkout-form {
    background: white;
    padding: 3rem;
    border-radius: 16px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.checkout-form h2 {
    margin-bottom: 2rem;
}

.stripe-element {
    padding: 1rem;
    border: 2px solid #e5e7eb;
    border-radius: 8px;
    background: white;
}

.error-message {
    color: #ef4444;
    margin-top: 0.5rem;
    font-size: 0.9rem;
}

.spinner {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255,255,255,0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 1s ease-in-out infinite;
}

.hidden {
    display: none;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

#submit-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

.payment-security {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-top: 2rem;
    padding: 1rem;
    background: #f9fafb;
    border-radius: 8px;
    color: #666;
    font-size: 0.9rem;
}

.payment-security i {
    color: #10b981;
}

.order-summary-box {
    background: white;
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    align-self: start;
    position: sticky;
    top: 100px;
}

.order-summary-box h3 {
    margin-bottom: 2rem;
}

.summary-section {
    padding: 1.5rem 0;
    border-bottom: 1px solid #e5e7eb;
}

.summary-section:last-of-type {
    border-bottom: none;
}

.summary-section h4 {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.resource-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.resource-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
}

.resource-item i {
    color: #8B0000;
    width: 20px;
}

.summary-total {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 0;
    font-size: 1.25rem;
    font-weight: 700;
}

.total-amount {
    color: #8B0000;
    font-size: 2rem;
}

@media (max-width: 968px) {
    .checkout-grid {
        grid-template-columns: 1fr;
    }
    
    .order-summary-box {
        position: static;
    }
}
</style>

<script src="https://js.stripe.com/v3/"></script>
<script>
document.addEventListener('DOMContentLoaded', async function() {
    const stripe = Stripe('<%= stripePublicKey %>');
    
    // Create payment intent
    const response = await fetch('/payment/create-payment-intent', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            orderId: <%= order.id %>,
            amount: <%= order.price %>
        })
    });
    
    const { clientSecret } = await response.json();
    
    // Set up Stripe Elements
    const elements = stripe.elements({ clientSecret });
    const cardElement = elements.create('payment');
    cardElement.mount('#card-element');
    
    // Handle form submission
    const form = document.getElementById('payment-form');
    const submitButton = document.getElementById('submit-button');
    const buttonText = document.getElementById('button-text');
    const spinner = document.getElementById('spinner');
    
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        submitButton.disabled = true;
        buttonText.style.display = 'none';
        spinner.classList.remove('hidden');
        
        const { error, paymentIntent } = await stripe.confirmPayment({
            elements,
            confirmParams: {
                return_url: window.location.origin + '/payment/success/<%= order.id %>'
            }
        });
        
        if (error) {
            document.getElementById('card-errors').textContent = error.message;
            submitButton.disabled = false;
            buttonText.style.display = 'inline';
            spinner.classList.add('hidden');
        }
    });
    
    // Handle card errors
    cardElement.on('change', (event) => {
        const displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });
});
</script>
